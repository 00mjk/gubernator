// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	common.proto
	config.proto
	ratelimit.proto

It has these top-level messages:
	RateLimitConfig
	GetPeersRequest
	GetPeersResponse
	RateLimitRequest
	RateLimitResponse
	RateLimitKeyRequest
	Descriptor
	DescriptorStatus
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RateLimitConfig_Algorithm int32

const (
	RateLimitConfig_TOKEN_BUCKET RateLimitConfig_Algorithm = 0
	RateLimitConfig_LEAKY_BUCKET RateLimitConfig_Algorithm = 1
)

var RateLimitConfig_Algorithm_name = map[int32]string{
	0: "TOKEN_BUCKET",
	1: "LEAKY_BUCKET",
}
var RateLimitConfig_Algorithm_value = map[string]int32{
	"TOKEN_BUCKET": 0,
	"LEAKY_BUCKET": 1,
}

func (x RateLimitConfig_Algorithm) String() string {
	return proto.EnumName(RateLimitConfig_Algorithm_name, int32(x))
}
func (RateLimitConfig_Algorithm) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

// Defines a rate limit duration and requests per duration
type RateLimitConfig struct {
	// The number of requests that can occur for the duration of the rate limit
	Limit int64 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	// The duration of the rate limit in milliseconds
	// Second = 1000 Milliseconds
	// Minute = 60000 Milliseconds
	// Hour = 3600000 Milliseconds
	Duration int64 `protobuf:"varint,2,opt,name=duration" json:"duration,omitempty"`
	// The algorithm used to calculate the rate limit
	Algorithm RateLimitConfig_Algorithm `protobuf:"varint,3,opt,name=algorithm,enum=pb.gubernator.RateLimitConfig_Algorithm" json:"algorithm,omitempty"`
}

func (m *RateLimitConfig) Reset()                    { *m = RateLimitConfig{} }
func (m *RateLimitConfig) String() string            { return proto.CompactTextString(m) }
func (*RateLimitConfig) ProtoMessage()               {}
func (*RateLimitConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RateLimitConfig) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *RateLimitConfig) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *RateLimitConfig) GetAlgorithm() RateLimitConfig_Algorithm {
	if m != nil {
		return m.Algorithm
	}
	return RateLimitConfig_TOKEN_BUCKET
}

func init() {
	proto.RegisterType((*RateLimitConfig)(nil), "pb.gubernator.RateLimitConfig")
	proto.RegisterEnum("pb.gubernator.RateLimitConfig_Algorithm", RateLimitConfig_Algorithm_name, RateLimitConfig_Algorithm_value)
}

func init() { proto.RegisterFile("common.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 186 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0xcf, 0xcd,
	0xcd, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2d, 0x48, 0xd2, 0x4b, 0x2f, 0x4d,
	0x4a, 0x2d, 0xca, 0x4b, 0x2c, 0xc9, 0x2f, 0x52, 0xda, 0xc3, 0xc8, 0xc5, 0x1f, 0x94, 0x58, 0x92,
	0xea, 0x93, 0x99, 0x9b, 0x59, 0xe2, 0x9c, 0x9f, 0x97, 0x96, 0x99, 0x2e, 0x24, 0xc2, 0xc5, 0x9a,
	0x03, 0xe2, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x30, 0x07, 0x41, 0x38, 0x42, 0x52, 0x5c, 0x1c, 0x29,
	0xa5, 0x45, 0x89, 0x25, 0x99, 0xf9, 0x79, 0x12, 0x4c, 0x60, 0x09, 0x38, 0x5f, 0xc8, 0x8d, 0x8b,
	0x33, 0x31, 0x27, 0x3d, 0xbf, 0x28, 0xb3, 0x24, 0x23, 0x57, 0x82, 0x59, 0x81, 0x51, 0x83, 0xcf,
	0x48, 0x43, 0x0f, 0xc5, 0x22, 0x3d, 0x34, 0x4b, 0xf4, 0x1c, 0x61, 0xea, 0x83, 0x10, 0x5a, 0x95,
	0xf4, 0xb9, 0x38, 0xe1, 0xe2, 0x42, 0x02, 0x5c, 0x3c, 0x21, 0xfe, 0xde, 0xae, 0x7e, 0xf1, 0x4e,
	0xa1, 0xce, 0xde, 0xae, 0x21, 0x02, 0x0c, 0x20, 0x11, 0x1f, 0x57, 0x47, 0xef, 0x48, 0x98, 0x08,
	0xa3, 0x13, 0x4b, 0x14, 0x53, 0x41, 0x52, 0x12, 0x1b, 0xd8, 0x6b, 0xc6, 0x80, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x94, 0x28, 0xa7, 0x36, 0xea, 0x00, 0x00, 0x00,
}
